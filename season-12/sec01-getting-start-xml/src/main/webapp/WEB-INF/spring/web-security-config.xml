<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- bean definitions here -->
    <security:http pattern="/" security="none" />
    
    <security:http pattern="/resources/**" security="none" />
    
    <!-- Admin Security Filter Chain with Http Basic Login -->
    <security:http pattern="/admin/**" authentication-manager-ref="adminAuthenticationManager">
    	<security:intercept-url pattern="/admin/**" access="hasAuthority('Admin')"/>
		<security:http-basic />  
    </security:http>
    
    <security:authentication-manager id="adminAuthenticationManager">
    	<security:authentication-provider>
			<security:password-encoder ref="passwordEncoder"/>    	
		    <security:user-service>
		    	<security:user name="admin@gmail.com" authorities="Admin" password="$2a$10$oXE.lfp2mdzcYBdyZdyHkOI4yK4RvsEVEvm1r9xij8GissVsOpj7S" />
		    </security:user-service>
    	</security:authentication-provider>
    </security:authentication-manager>
    
    <!-- Member Security Filter Chain with Digest Login -->
    <security:http pattern="/member/**" entry-point-ref="digestAuthenticationEntryPoint">
    	<security:intercept-url pattern="/member/**" access="hasAuthority('Member')"/>
    	<security:custom-filter ref="digestAuthenticationFilter" position="DIGEST_AUTH_FILTER"/>
    </security:http>
    
    <!-- Authentication Entry Point -->
    <bean id="digestAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
    	<property name="key" value="MY-SECRET-KEY"></property>
    	<property name="realmName" value="DIGEST-REALM"></property>
    </bean>
    
    <!-- Authentication Filter -->
    <bean id="digestAuthenticationFilter" class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
    	<property name="authenticationEntryPoint" ref="digestAuthenticationEntryPoint"></property>
    	<property name="userDetailsService" ref="memberUserDetailsService"></property>
    	<property name="createAuthenticatedToken" value="true"></property>
    </bean>

	<security:jdbc-user-service id="memberUserDetailsService"
		data-source-ref="dataSource" 
		users-by-username-query="select email username, password, true from MEMBERS where email = ?"
		authorities-by-username-query="select email username, role from MEMBERS where email = ?"/>    		
    
    <!-- Customer Security Filter Chain with Form Login -->
    <security:http>
    	
    	<security:intercept-url pattern="/customer/**" access="hasAuthority('Customer')"/>
    	
    	<security:form-login/>
    	<security:logout/>

    </security:http>
    
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    
    <security:authentication-manager>
    	    	
    	<security:authentication-provider user-service-ref="customerUserDetailsService">
			<security:password-encoder ref="passwordEncoder"/>    	
    	</security:authentication-provider>
    	
    </security:authentication-manager>

</beans>